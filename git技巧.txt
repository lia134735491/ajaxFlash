1.touch 用于创建文件
2.mkdir 用于创建文件夹
3.cat 用于查看文件
4.vim 用于编辑文件，如果没有该文件会先自动创建该文件并自动进入编辑状态，然后在按 o i a 就可以进输入模式，编辑文件里面的内容了
5.esc+shift 退出文件编辑状态,进入命令行模式，输入:wq或:x保存并退出,q：退出当前文件，q!：强制退出，不保存当前修改
6.vim进入文件后的常用命令参考：https://www.daixiaorui.com/read/256.html
7.按下esc退出文本编辑，在输入英文的:号就能进入末行模式
8.如果使用git commit命令进行提交是没有使用-m参数添加提交信息，就会自动进入此次提交信息编辑页面.未编辑信息就退出编辑器会取消这次提交
9.git log 后面跟文件名(git log liangliang.txt)，可以查看该文件的提交信息
10.git log -p liangliang.txt,加上-p这个参数可以查看文件提交之间的差异，之后按下英文状态下的q或者ctrl+c
11.git diff 用来查看工作区、暂存区这两者和最新提交之间的差别(我是这么理解的)
12.git log只会显示提交信息,git reflog不仅仅换显示提交信息还会显示操作信息，比如：切换分支之类的操作信息
13.分支合并时没有加--no-ff参数，主干上的最新提交哈希值就是合并的分支上最新的一次提交，并且看不到提交图表，加上参数--no-ff合并会在主干上生成一个新的哈希值提交，并且会看到提交图表(建议每次合并分支都加上)
14.修改上一次提交的信息git commit --amend
15.git rebase 命令用来合并两个提交为一个，git rebase -i HEAD~2表示合并最新的两个提交，详情可以查看goodnotes中的git一书中的P61页
16.git checkout -b branch-b origin/branch-b此命令就是在本地创建了branch-b分支根据远程库的branch-b分支创建并关联起来
17.新创建的本地仓库克隆了远程库，需要远程库的的某一分支时，可以使用git checkout -b branch-a origin/branch-a,参考ipad中的goodnotes中的git一书的P67页
